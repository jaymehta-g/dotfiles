import time
import json
import os
import random


# custom PATH directories
_custom_path_dirs=[
    '/opt/godot',
    '/usr/local/go/bin',
]
for x in _custom_path_dirs:
    if not x in $PATH:
        $PATH.append(x)

# custom env
$DOTFILES = "~/.dotfiles"

# custom prompt
def colortext(text: str, color: str, bgcolor: str):
    return "{" + color + "}{BACKGROUND_" + bgcolor + "}" + text + r"{RESET}"

def prompt():
    sections = [
        # r" {user} ",
        # Set later!
    ]
    colors = [
        "INTENSE_GREEN",
    ]

    # username
    uname = $(whoami)[0:-1]
    if uname == "root":
        colors[0] = "WHITE"
    sections.append(" {} ".format(uname)) 

    # venv
    venvname = $PROMPT_FIELDS["env_name"]()
    if venvname:
        sections.append(" {} ".format(venvname[1:-2]))
        colors.append("INTENSE_YELLOW")

    # cwd
    sections += [
        r" {cwd} "
    ]
    colors += [
        "INTENSE_BLUE"
    ]

    #git
    currbranch=$PROMPT_FIELDS['curr_branch']()
    if currbranch:
        sections.append(" {} ".format(currbranch))
        colors.append("INTENSE_RED")
    
    # now, create the prompt string
    text: str = r"{BACKGROUND_" + colors[0] + r"}{BLACK}{RESET}"
    prev_color: str = None
    for sec, col, in zip(sections, colors):
        if prev_color:
            #text += "{BACKGROUND_" + prev_color + "}{" + col + r"}{RESET}" 
            text += colortext("", prev_color, col)
        text += colortext(sec, "BLACK", col)
        prev_color = col
    text += colortext("", prev_color, "BLACK")

    # return code
    if __xonsh__.history.rtns.__len__() > 0:
        last_return_code = __xonsh__.history.rtns[-1]
        if (last_return_code != 0):
            text += r"  {RED}({INTENSE_RED}" + str(last_return_code) + r"{RED}){RESET}"

    # command prompt on newline
    text += "\n"
    if ($PROMPT_FIELDS['prompt_end'] == '#'):
        text += " # "
    else:
        text += " → "

    return text

$PROMPT = prompt

# timestamp on rprompt
def rightprompt():
    local = time.localtime()
    return r"{INTENSE_BLACK}" + \
        "{:02}:{:02}:{:02}".format(local.tm_hour,local.tm_min,local.tm_sec) + \
        r"{RESET}"

$RIGHT_PROMPT = rightprompt

# return code util function
def last_return_code():
    rtns = __xonsh__.history.rtns
    if len(rtns) == 0:
        return 0 # default
    else:
        return rtns[-1]

# last cmd util function
def lastcmd():
    return __xonsh__.history[-1].cmd[0:-1]